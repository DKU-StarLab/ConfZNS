/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_HW_HPPA_GENERATED_TRACERS_H
#define TRACE_HW_HPPA_GENERATED_TRACERS_H

#include "trace/control.h"

extern TraceEvent _TRACE_HPPA_PCI_IACK_WRITE_EVENT;
extern TraceEvent _TRACE_DINO_CHIP_MEM_VALID_EVENT;
extern TraceEvent _TRACE_DINO_CHIP_READ_EVENT;
extern TraceEvent _TRACE_DINO_CHIP_WRITE_EVENT;
extern TraceEvent _TRACE_LASI_CHIP_MEM_VALID_EVENT;
extern TraceEvent _TRACE_LASI_CHIP_READ_EVENT;
extern TraceEvent _TRACE_LASI_CHIP_WRITE_EVENT;
extern uint16_t _TRACE_HPPA_PCI_IACK_WRITE_DSTATE;
extern uint16_t _TRACE_DINO_CHIP_MEM_VALID_DSTATE;
extern uint16_t _TRACE_DINO_CHIP_READ_DSTATE;
extern uint16_t _TRACE_DINO_CHIP_WRITE_DSTATE;
extern uint16_t _TRACE_LASI_CHIP_MEM_VALID_DSTATE;
extern uint16_t _TRACE_LASI_CHIP_READ_DSTATE;
extern uint16_t _TRACE_LASI_CHIP_WRITE_DSTATE;
#define TRACE_HPPA_PCI_IACK_WRITE_ENABLED 1
#define TRACE_DINO_CHIP_MEM_VALID_ENABLED 1
#define TRACE_DINO_CHIP_READ_ENABLED 1
#define TRACE_DINO_CHIP_WRITE_ENABLED 1
#define TRACE_LASI_CHIP_MEM_VALID_ENABLED 1
#define TRACE_LASI_CHIP_READ_ENABLED 1
#define TRACE_LASI_CHIP_WRITE_ENABLED 1
#include "qemu/log-for-trace.h"
#include "qemu/error-report.h"


#define TRACE_HPPA_PCI_IACK_WRITE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_HPPA_PCI_IACK_WRITE) || \
    false)

static inline void _nocheck__trace_hppa_pci_iack_write(void)
{
    if (trace_event_get_state(TRACE_HPPA_PCI_IACK_WRITE) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 4 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("%d@%zu.%06zu:hppa_pci_iack_write " "" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     );
#line 49 "trace/trace-hw_hppa.h"
        } else {
#line 4 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("hppa_pci_iack_write " "" "\n");
#line 53 "trace/trace-hw_hppa.h"
        }
    }
}

static inline void trace_hppa_pci_iack_write(void)
{
    if (true) {
        _nocheck__trace_hppa_pci_iack_write();
    }
}

#define TRACE_DINO_CHIP_MEM_VALID_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_DINO_CHIP_MEM_VALID) || \
    false)

static inline void _nocheck__trace_dino_chip_mem_valid(uint64_t addr, uint32_t val)
{
    if (trace_event_get_state(TRACE_DINO_CHIP_MEM_VALID) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 7 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("%d@%zu.%06zu:dino_chip_mem_valid " "access to addr 0x%"PRIx64" is %d" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, val);
#line 80 "trace/trace-hw_hppa.h"
        } else {
#line 7 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("dino_chip_mem_valid " "access to addr 0x%"PRIx64" is %d" "\n", addr, val);
#line 84 "trace/trace-hw_hppa.h"
        }
    }
}

static inline void trace_dino_chip_mem_valid(uint64_t addr, uint32_t val)
{
    if (true) {
        _nocheck__trace_dino_chip_mem_valid(addr, val);
    }
}

#define TRACE_DINO_CHIP_READ_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_DINO_CHIP_READ) || \
    false)

static inline void _nocheck__trace_dino_chip_read(uint64_t addr, uint32_t val)
{
    if (trace_event_get_state(TRACE_DINO_CHIP_READ) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 8 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("%d@%zu.%06zu:dino_chip_read " "addr 0x%"PRIx64" val 0x%08x" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, val);
#line 111 "trace/trace-hw_hppa.h"
        } else {
#line 8 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("dino_chip_read " "addr 0x%"PRIx64" val 0x%08x" "\n", addr, val);
#line 115 "trace/trace-hw_hppa.h"
        }
    }
}

static inline void trace_dino_chip_read(uint64_t addr, uint32_t val)
{
    if (true) {
        _nocheck__trace_dino_chip_read(addr, val);
    }
}

#define TRACE_DINO_CHIP_WRITE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_DINO_CHIP_WRITE) || \
    false)

static inline void _nocheck__trace_dino_chip_write(uint64_t addr, uint32_t val)
{
    if (trace_event_get_state(TRACE_DINO_CHIP_WRITE) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 9 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("%d@%zu.%06zu:dino_chip_write " "addr 0x%"PRIx64" val 0x%08x" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, val);
#line 142 "trace/trace-hw_hppa.h"
        } else {
#line 9 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("dino_chip_write " "addr 0x%"PRIx64" val 0x%08x" "\n", addr, val);
#line 146 "trace/trace-hw_hppa.h"
        }
    }
}

static inline void trace_dino_chip_write(uint64_t addr, uint32_t val)
{
    if (true) {
        _nocheck__trace_dino_chip_write(addr, val);
    }
}

#define TRACE_LASI_CHIP_MEM_VALID_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_LASI_CHIP_MEM_VALID) || \
    false)

static inline void _nocheck__trace_lasi_chip_mem_valid(uint64_t addr, uint32_t val)
{
    if (trace_event_get_state(TRACE_LASI_CHIP_MEM_VALID) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 12 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("%d@%zu.%06zu:lasi_chip_mem_valid " "access to addr 0x%"PRIx64" is %d" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, val);
#line 173 "trace/trace-hw_hppa.h"
        } else {
#line 12 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("lasi_chip_mem_valid " "access to addr 0x%"PRIx64" is %d" "\n", addr, val);
#line 177 "trace/trace-hw_hppa.h"
        }
    }
}

static inline void trace_lasi_chip_mem_valid(uint64_t addr, uint32_t val)
{
    if (true) {
        _nocheck__trace_lasi_chip_mem_valid(addr, val);
    }
}

#define TRACE_LASI_CHIP_READ_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_LASI_CHIP_READ) || \
    false)

static inline void _nocheck__trace_lasi_chip_read(uint64_t addr, uint32_t val)
{
    if (trace_event_get_state(TRACE_LASI_CHIP_READ) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 13 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("%d@%zu.%06zu:lasi_chip_read " "addr 0x%"PRIx64" val 0x%08x" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, val);
#line 204 "trace/trace-hw_hppa.h"
        } else {
#line 13 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("lasi_chip_read " "addr 0x%"PRIx64" val 0x%08x" "\n", addr, val);
#line 208 "trace/trace-hw_hppa.h"
        }
    }
}

static inline void trace_lasi_chip_read(uint64_t addr, uint32_t val)
{
    if (true) {
        _nocheck__trace_lasi_chip_read(addr, val);
    }
}

#define TRACE_LASI_CHIP_WRITE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_LASI_CHIP_WRITE) || \
    false)

static inline void _nocheck__trace_lasi_chip_write(uint64_t addr, uint32_t val)
{
    if (trace_event_get_state(TRACE_LASI_CHIP_WRITE) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 14 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("%d@%zu.%06zu:lasi_chip_write " "addr 0x%"PRIx64" val 0x%08x" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, val);
#line 235 "trace/trace-hw_hppa.h"
        } else {
#line 14 "/home/inhoinno/FEMU/hw/hppa/trace-events"
            qemu_log("lasi_chip_write " "addr 0x%"PRIx64" val 0x%08x" "\n", addr, val);
#line 239 "trace/trace-hw_hppa.h"
        }
    }
}

static inline void trace_lasi_chip_write(uint64_t addr, uint32_t val)
{
    if (true) {
        _nocheck__trace_lasi_chip_write(addr, val);
    }
}
#endif /* TRACE_HW_HPPA_GENERATED_TRACERS_H */
