/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_QAPI_COMMANDS_DUMP_TRACE_EVENTS_GENERATED_TRACERS_H
#define TRACE_QAPI_COMMANDS_DUMP_TRACE_EVENTS_GENERATED_TRACERS_H

#include "trace/control.h"

extern TraceEvent _TRACE_QMP_ENTER_DUMP_GUEST_MEMORY_EVENT;
extern TraceEvent _TRACE_QMP_EXIT_DUMP_GUEST_MEMORY_EVENT;
extern TraceEvent _TRACE_QMP_ENTER_QUERY_DUMP_EVENT;
extern TraceEvent _TRACE_QMP_EXIT_QUERY_DUMP_EVENT;
extern TraceEvent _TRACE_QMP_ENTER_QUERY_DUMP_GUEST_MEMORY_CAPABILITY_EVENT;
extern TraceEvent _TRACE_QMP_EXIT_QUERY_DUMP_GUEST_MEMORY_CAPABILITY_EVENT;
extern uint16_t _TRACE_QMP_ENTER_DUMP_GUEST_MEMORY_DSTATE;
extern uint16_t _TRACE_QMP_EXIT_DUMP_GUEST_MEMORY_DSTATE;
extern uint16_t _TRACE_QMP_ENTER_QUERY_DUMP_DSTATE;
extern uint16_t _TRACE_QMP_EXIT_QUERY_DUMP_DSTATE;
extern uint16_t _TRACE_QMP_ENTER_QUERY_DUMP_GUEST_MEMORY_CAPABILITY_DSTATE;
extern uint16_t _TRACE_QMP_EXIT_QUERY_DUMP_GUEST_MEMORY_CAPABILITY_DSTATE;
#define TRACE_QMP_ENTER_DUMP_GUEST_MEMORY_ENABLED 1
#define TRACE_QMP_EXIT_DUMP_GUEST_MEMORY_ENABLED 1
#define TRACE_QMP_ENTER_QUERY_DUMP_ENABLED 1
#define TRACE_QMP_EXIT_QUERY_DUMP_ENABLED 1
#define TRACE_QMP_ENTER_QUERY_DUMP_GUEST_MEMORY_CAPABILITY_ENABLED 1
#define TRACE_QMP_EXIT_QUERY_DUMP_GUEST_MEMORY_CAPABILITY_ENABLED 1
#include "qemu/log-for-trace.h"
#include "qemu/error-report.h"


#define TRACE_QMP_ENTER_DUMP_GUEST_MEMORY_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_QMP_ENTER_DUMP_GUEST_MEMORY) || \
    false)

static inline void _nocheck__trace_qmp_enter_dump_guest_memory(const char * json)
{
    if (trace_event_get_state(TRACE_QMP_ENTER_DUMP_GUEST_MEMORY) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 3 "qapi/qapi-commands-dump.trace-events"
            qemu_log("%d@%zu.%06zu:qmp_enter_dump_guest_memory " "%s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , json);
#line 46 "trace/trace-qapi_commands_dump_trace_events.h"
        } else {
#line 3 "qapi/qapi-commands-dump.trace-events"
            qemu_log("qmp_enter_dump_guest_memory " "%s" "\n", json);
#line 50 "trace/trace-qapi_commands_dump_trace_events.h"
        }
    }
}

static inline void trace_qmp_enter_dump_guest_memory(const char * json)
{
    if (true) {
        _nocheck__trace_qmp_enter_dump_guest_memory(json);
    }
}

#define TRACE_QMP_EXIT_DUMP_GUEST_MEMORY_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_QMP_EXIT_DUMP_GUEST_MEMORY) || \
    false)

static inline void _nocheck__trace_qmp_exit_dump_guest_memory(const char * result, bool succeeded)
{
    if (trace_event_get_state(TRACE_QMP_EXIT_DUMP_GUEST_MEMORY) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 4 "qapi/qapi-commands-dump.trace-events"
            qemu_log("%d@%zu.%06zu:qmp_exit_dump_guest_memory " "%s %d" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , result, succeeded);
#line 77 "trace/trace-qapi_commands_dump_trace_events.h"
        } else {
#line 4 "qapi/qapi-commands-dump.trace-events"
            qemu_log("qmp_exit_dump_guest_memory " "%s %d" "\n", result, succeeded);
#line 81 "trace/trace-qapi_commands_dump_trace_events.h"
        }
    }
}

static inline void trace_qmp_exit_dump_guest_memory(const char * result, bool succeeded)
{
    if (true) {
        _nocheck__trace_qmp_exit_dump_guest_memory(result, succeeded);
    }
}

#define TRACE_QMP_ENTER_QUERY_DUMP_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_QMP_ENTER_QUERY_DUMP) || \
    false)

static inline void _nocheck__trace_qmp_enter_query_dump(const char * json)
{
    if (trace_event_get_state(TRACE_QMP_ENTER_QUERY_DUMP) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 5 "qapi/qapi-commands-dump.trace-events"
            qemu_log("%d@%zu.%06zu:qmp_enter_query_dump " "%s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , json);
#line 108 "trace/trace-qapi_commands_dump_trace_events.h"
        } else {
#line 5 "qapi/qapi-commands-dump.trace-events"
            qemu_log("qmp_enter_query_dump " "%s" "\n", json);
#line 112 "trace/trace-qapi_commands_dump_trace_events.h"
        }
    }
}

static inline void trace_qmp_enter_query_dump(const char * json)
{
    if (true) {
        _nocheck__trace_qmp_enter_query_dump(json);
    }
}

#define TRACE_QMP_EXIT_QUERY_DUMP_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_QMP_EXIT_QUERY_DUMP) || \
    false)

static inline void _nocheck__trace_qmp_exit_query_dump(const char * result, bool succeeded)
{
    if (trace_event_get_state(TRACE_QMP_EXIT_QUERY_DUMP) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 6 "qapi/qapi-commands-dump.trace-events"
            qemu_log("%d@%zu.%06zu:qmp_exit_query_dump " "%s %d" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , result, succeeded);
#line 139 "trace/trace-qapi_commands_dump_trace_events.h"
        } else {
#line 6 "qapi/qapi-commands-dump.trace-events"
            qemu_log("qmp_exit_query_dump " "%s %d" "\n", result, succeeded);
#line 143 "trace/trace-qapi_commands_dump_trace_events.h"
        }
    }
}

static inline void trace_qmp_exit_query_dump(const char * result, bool succeeded)
{
    if (true) {
        _nocheck__trace_qmp_exit_query_dump(result, succeeded);
    }
}

#define TRACE_QMP_ENTER_QUERY_DUMP_GUEST_MEMORY_CAPABILITY_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_QMP_ENTER_QUERY_DUMP_GUEST_MEMORY_CAPABILITY) || \
    false)

static inline void _nocheck__trace_qmp_enter_query_dump_guest_memory_capability(const char * json)
{
    if (trace_event_get_state(TRACE_QMP_ENTER_QUERY_DUMP_GUEST_MEMORY_CAPABILITY) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 7 "qapi/qapi-commands-dump.trace-events"
            qemu_log("%d@%zu.%06zu:qmp_enter_query_dump_guest_memory_capability " "%s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , json);
#line 170 "trace/trace-qapi_commands_dump_trace_events.h"
        } else {
#line 7 "qapi/qapi-commands-dump.trace-events"
            qemu_log("qmp_enter_query_dump_guest_memory_capability " "%s" "\n", json);
#line 174 "trace/trace-qapi_commands_dump_trace_events.h"
        }
    }
}

static inline void trace_qmp_enter_query_dump_guest_memory_capability(const char * json)
{
    if (true) {
        _nocheck__trace_qmp_enter_query_dump_guest_memory_capability(json);
    }
}

#define TRACE_QMP_EXIT_QUERY_DUMP_GUEST_MEMORY_CAPABILITY_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_QMP_EXIT_QUERY_DUMP_GUEST_MEMORY_CAPABILITY) || \
    false)

static inline void _nocheck__trace_qmp_exit_query_dump_guest_memory_capability(const char * result, bool succeeded)
{
    if (trace_event_get_state(TRACE_QMP_EXIT_QUERY_DUMP_GUEST_MEMORY_CAPABILITY) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 8 "qapi/qapi-commands-dump.trace-events"
            qemu_log("%d@%zu.%06zu:qmp_exit_query_dump_guest_memory_capability " "%s %d" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , result, succeeded);
#line 201 "trace/trace-qapi_commands_dump_trace_events.h"
        } else {
#line 8 "qapi/qapi-commands-dump.trace-events"
            qemu_log("qmp_exit_query_dump_guest_memory_capability " "%s %d" "\n", result, succeeded);
#line 205 "trace/trace-qapi_commands_dump_trace_events.h"
        }
    }
}

static inline void trace_qmp_exit_query_dump_guest_memory_capability(const char * result, bool succeeded)
{
    if (true) {
        _nocheck__trace_qmp_exit_query_dump_guest_memory_capability(result, succeeded);
    }
}
#endif /* TRACE_QAPI_COMMANDS_DUMP_TRACE_EVENTS_GENERATED_TRACERS_H */
