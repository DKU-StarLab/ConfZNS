/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_EBPF_GENERATED_TRACERS_H
#define TRACE_EBPF_GENERATED_TRACERS_H

#include "trace/control.h"

extern TraceEvent _TRACE_EBPF_ERROR_EVENT;
extern uint16_t _TRACE_EBPF_ERROR_DSTATE;
#define TRACE_EBPF_ERROR_ENABLED 1
#include "qemu/log-for-trace.h"
#include "qemu/error-report.h"


#define TRACE_EBPF_ERROR_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_EBPF_ERROR) || \
    false)

static inline void _nocheck__trace_ebpf_error(const char * s1, const char * s2)
{
    if (trace_event_get_state(TRACE_EBPF_ERROR) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 4 "/home/inhoinno/FEMU/ebpf/trace-events"
            qemu_log("%d@%zu.%06zu:ebpf_error " "error in %s: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , s1, s2);
#line 31 "trace/trace-ebpf.h"
        } else {
#line 4 "/home/inhoinno/FEMU/ebpf/trace-events"
            qemu_log("ebpf_error " "error in %s: %s" "\n", s1, s2);
#line 35 "trace/trace-ebpf.h"
        }
    }
}

static inline void trace_ebpf_error(const char * s1, const char * s2)
{
    if (true) {
        _nocheck__trace_ebpf_error(s1, s2);
    }
}
#endif /* TRACE_EBPF_GENERATED_TRACERS_H */
